worker_processes  4;

events {}

http {
    include       mime.types;
    default_type  application/octet-stream;
    sendfile        on;
    keepalive_timeout  65;

    # Use internal docker DNS server
    resolver 127.0.0.11 ipv6=off valid=10s;

    # for Websocket
    map $http_upgrade $connection_upgrade {
        default upgrade;
        '' close;
    }

    server {
        listen 80;

        index index.php index.html;
        root /var/www/html/public;

        error_log  /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;

        location ~ /browser-sync/  {
            proxy_pass              http://frontend:3000$request_uri;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection $connection_upgrade;
            proxy_set_header        Host $host;
        }

        # Proxy the Websocket connection to the Webpack server.
        location /sockjs-node/ {
            proxy_pass              http://frontend:8080;
            proxy_http_version      1.1;
            proxy_set_header        Upgrade $http_upgrade;
            proxy_set_header        Connection $connection_upgrade;
            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header        Host $host;
        }

        location ~ \.php$ {
            try_files $uri = 404;
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            fastcgi_pass app:9000;
            fastcgi_index index.php;
            include fastcgi_params;
            fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
            fastcgi_param PATH_INFO $fastcgi_path_info;
        }

         location / {
            try_files $uri $uri/ /index.php?$query_string;
            gzip_static on;
        }
    }
}
